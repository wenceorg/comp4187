<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2020/21 on COMP4187 – Parallel Scientific Computing II</title><link>https://teaching.wence.uk/comp4187/past-editions/2020-21/</link><description>Recent content in 2020/21 on COMP4187 – Parallel Scientific Computing II</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://teaching.wence.uk/comp4187/past-editions/2020-21/index.xml" rel="self" type="application/rss+xml"/><item><title>Term 1: numerics</title><link>https://teaching.wence.uk/comp4187/past-editions/2020-21/term1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/past-editions/2020-21/term1/</guid><description>Lecture 1: finite differences # The lecture will take place over zoom. A calender invite is available on duo. The zoom invite can also be found at info).
Before the lecture it would be good if you can download the ipython notebook and run it. You can see jupyter for instructions on how to run the notebook.
Alternatively, you can run the notebook online without installing python.
finite-differences After the lecture a video recording has been placed on duo.</description></item><item><title>Term 2: parallel computing</title><link>https://teaching.wence.uk/comp4187/past-editions/2020-21/term2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/past-editions/2020-21/term2/</guid><description>Lecture scribblings and video links # Links to the videos should be accessible with a Durham account registered on the course in 2020/21.
2021-01-13: Scribbles, video, code
2021-01-20: Scribbles, video
About half way through when I wrote down the efficiency for weak scaling I simplified $\frac{T_1}{T_1 + \mathcal{o}(p)T_1}$ to $\frac{T_1}{1 + \mathcal{o}(p)}$. The correct efficiency for weak scaling is $$ \eta_p = \frac{1}{1 + \mathcal{o}(p)}, $$ the correct expressions for $\eta_p^{\text{fix}}$ and $\eta_p^{\text{log}}$ are therefore</description></item><item><title>Coursework: a 3D multigrid solver</title><link>https://teaching.wence.uk/comp4187/past-editions/2020-21/coursework/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/past-editions/2020-21/coursework/</guid><description>A 3D multigrid solver # The submission deadline for this work is 13th May 2021.
See below for submission details.
Updates 2021/03/31 Fixed sign error in forcing term for Part 1. The $f$ needs a minus sign out the front for the exact solution to be a positive product of signs. Fix instructions for obtaining petsc4py on Hamilton. Introduction # In this coursework, we&amp;rsquo;re going to implement a parallel multigrid solver in three dimensions for the variable-coefficient Laplacian.</description></item></channel></rss>